- 제한자
1)  public        : 모든 접근을 허용
2)  protected  : 같은 패키지(폴더)에 있는 객체와 상속관계의 객체들만 허용
3)  default       : 같은 패키지(폴더)에 있는 객체들만 허용
4)  private       : 현재 객체 내에서만 허용

- 추상 클래스
    1) 뜻
        1. 추상 메서드를 포함한 클래스
        2. abstract로 선언
    2) 추상 클래스를 쓰는 이유
        1. 공통된 필드와 메서드를 통일할 목적
            추상클래스에서 미리 정의한 필드와 메서드가 있다면, 실체 클래스는 추상클래스의
            필드와 메서드명을 변경할 수 없고, 무조건 해당 명명으로 구현해야한다. 
            즉, 필드와 메서드 이름을 통일하여 유지보수성을 높이고 통일성을 유지할 수 있다.
        2. 실체 클래스 구현시, 시간 절약
            개발시 필요한 추상클래스를 상속받으면, 필드와 메서드가 오버라이딩 된다.
            즉, 강제로 주어지는 필드와 메서드를 가지고 나만의 스타일대로 구현만 하면 된다.

- 추상 메서드
    1) 처리가 적혀있지 않고 정의만 한 메서드이며, 정의만 했기 때문에 상속을 받으면 자식클래스에서는
        반드시 구현을 해야한다.

- 구현 클래스
    - 추상 메서드를 구현하는 클래스

- 인터페이스
    - 추상 메서드만 존재하는 추상 클래스
    - 클래스는 extends 상속이지만, 인터페이스는 implements로 구현이 가능


